name: Acquire activation file

on:
  workflow_dispatch:

jobs:
  activation:
    name: Request manual activation file ðŸ”‘
    runs-on: ubuntu-latest
    steps:
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Request manual activation file
      - name: Request manual activation file
        id: getManualLicenseFile
        continue-on-error: true
        uses: ./

      - name: Check for failure
        run: |
          if [ "${{ steps.getManualLicenseFile.outcome }}" != "failure"  ]; then
            echo "Expected failure, got ${{ steps.getManualLicenseFile.outcome }}"
            exit 1
          fi
      # Request manual activation file
      
      - name: Unity - Request Activation File
        id: requestActivationFile
        uses: game-ci/unity-request-activation-file@v2.0-alpha-1
      - name: Upload activation file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.requestActivationFile.outputs.filePath }}
          path: ${{ steps.requestActivationFile.outputs.filePath }}
          retention-days: 3
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Unity
        uses: actions/cache@v1.1.0
        with:
          unity-version: 2022.3.7f1  # ì‚¬ìš©í•  Unity ë²„ì „

      - name: Install NUnit
        run: |
          dotnet new tool-manifest
          dotnet tool install nunit.console --tool-path ./.nuget
          export PATH="$PATH:$(pwd)/.nuget"
      - name: Run Unit Tests
        run: |
          nunit3-console Library\ScriptAssemblies\Tests.dll  # ìœ ë‹› í…ŒìŠ¤íŠ¸ ì‹¤í–‰í•  DLL ê²½ë¡œ ì§€ì •
