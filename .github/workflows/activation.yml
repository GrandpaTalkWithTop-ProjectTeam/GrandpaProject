name: Acquire activation file

on:
  workflow_dispatch:

jobs:
  activation:
    name: Request manual activation file 🔑
    runs-on: ubuntu-latest
    steps:
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Request manual activation file
      - name: Request manual activation file
        id: getManualLicenseFile
        continue-on-error: true
        uses: ./

      - name: Check for failure
        run: |
          if [ "${{ steps.getManualLicenseFile.outcome }}" != "failure"  ]; then
            echo "Expected failure, got ${{ steps.getManualLicenseFile.outcome }}"
            exit 1
          fi
      # Request manual activation file
      
      - name: Unity - Request Activation File
        id: requestActivationFile
        uses: game-ci/unity-request-activation-file@v2.0-alpha-1
      - name: Upload activation file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.requestActivationFile.outputs.filePath }}
          path: ${{ steps.requestActivationFile.outputs.filePath }}
          retention-days: 3

      - name: Set up Unity
        uses: actions/cache@v1.1.0
        with:
          unity-version: 2022.3.7f1  # 사용할 Unity 버전
          
     # NUnit Console 설치 및 PATH 설정
      - name: Install NUnit Console and add to PATH
        run: |
          # NUnit Console NuGet 패키지를 글로벌 도구로 설치
          dotnet tool install --global NUnit.ConsoleRunner --version 3.12.0
          # 설치된 도구의 기본 경로를 PATH에 추가
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      # 유닛 테스트 실행
      - name: Run Unit Tests
        run: |
          # 이제 nunit3-console 명령을 직접 사용할 수 있습니다.
          nunit3-console Library/ScriptAssemblies/Tests.dll
